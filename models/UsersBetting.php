<?php

namespace app\models;

use Yii;
use yii\db\ActiveQuery;
use yii\db\ActiveRecord;

/**
 * This is the model class for table "users_betting".
 *
 * @property integer $id
 * @property integer $user_id
 * @property integer $pick_number_id
 * @property string $period
 * @property string $pick_time
 * @property integer $is_award
 */
class UsersBetting extends ActiveRecord
{

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'users_betting';
    }


    /**
     * @return ActiveQuery
     */
    public function getPickNumber()
    {
        return $this->hasOne(DoubleNumbers::className(), ['id' => 'pick_number_id']);
    }

    public function getPeriodModel()
    {
        return $this->hasOne(Period::className(), ['period_id' => 'period']);
    }

    public function getAwardHistory()
    {
        return $this->hasOne(AwardHistory::className(), ['betting_id' => 'id']);
    }

    public function getPrizeHistory()
    {
        return $this->hasOne(PrizeHistory::className(), ['period' => 'period']);
    }


    public function fields()
    {
        $fields = parent::fields();
        // remove fields that contain sensitive information
        $fields[] = 'pickNumber';
        $fields[] = 'periodDesc';
        $fields[] = 'ruleDesc';
        $fields[] = 'pickTimeDesc';
        $fields[] = 'periodStatusDesc';
        $fields[] = 'periodStatus';
        $fields[] = 'periodDrawTime';
        $fields[] = 'pickResult';
        $fields[] = 'numbers';
        $fields[] = 'awardNumbers';

        return $fields;
    }

    public function extraFields()
    {
        $fields = ['awardNumbers'];
        return $fields; // TODO: Change the autogenerated stub
    }

    public function getNumbers() {
        $pickNumber = $this->getPickNumber()->one();
        return [
            $pickNumber->red_1st,
            $pickNumber->red_2nd,
            $pickNumber->red_3rd,
            $pickNumber->red_4th,
            $pickNumber->red_5th,
            $pickNumber->red_6th,
            $pickNumber->blue_1st,
        ];
    }

    public function getAwardNumbers() {
        $prizeHist = $this->prizeHistory;
        if (!empty($prizeHist)) {
            $prizeNumber = $prizeHist->getDrawResult()->one();
            if (!empty($prizeNumber)) {
                return [
                    $prizeNumber->red_1st,
                    $prizeNumber->red_2nd,
                    $prizeNumber->red_3rd,
                    $prizeNumber->red_4th,
                    $prizeNumber->red_5th,
                    $prizeNumber->red_6th,
                    $prizeNumber->blue_1st,
                ];
            } else {
                return null;
            }
        } else {
            return null;
        }


    }



    public function getPeriodDesc() {
        return "第" . $this->period . "期";
    }

    public function getPickTimeDesc() {
        return date("m月d日 H:i", strtotime($this->pick_time));
    }

    public function getPeriodStatusDesc() {
        if ($this->periodModel->status == 1) {
            return $this->periodModel->sale_drawtime;
        } else {
            return $this->periodModel->statusDesc;
        }
    }

    public function getPeriodStatus() {
        return $this->periodModel->status;
    }

    public function getPickResult() {
        if ($this->is_award) {
            return $this->awardHistory;
        }
        return null;
    }

    public function getPeriodDrawTime() {
        return $this->periodModel->sale_drawtime;
    }

    public function getRuleDesc() {
        return "rule";
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['user_id', 'pick_number_id', 'period', 'pick_time'], 'required'],
            [['user_id', 'pick_number_id'], 'integer'],
            [['pick_time'], 'safe'],
            [['period'], 'string', 'max' => 64],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'user_id' => '用户id',
            'pick_number_id' => '号码id',
            'period' => 'Period',
            'pick_time' => 'Pick Time',
        ];
    }

    public function save($runValidation = true, $attributeNames = null)
    {
//        $this->numbers;
        return parent::save($runValidation, $attributeNames); // TODO: Change the autogenerated stub
    }
}
